-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
--   print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html


-- default config parameters: 
-- alignment = 'top_left', 				-- Alignment;								options: {top_left, top_right, middle_left, middle_right, bottom_left, bottom_right}
-- background = false, 					-- Run in background; 						options: {true, false}
-- border_width = 1,					-- The width of the border;					options: {numbers; default = 1}
-- default_color = 'white',				-- Default color of the border;				options: {'<color> / <hex>'; default = 'white'}
-- default_outline_color = 'white',		-- Default color of the outline;			options: {'<color> / <hex>'; default = 'white'}
-- default_shade_color = 'white',		-- Default color of the shade;				options: {'<color> / <hex>'; default = 'white'}
-- draw_borders = false,				-- Show borders around the system monitor;	options: {true, false}
-- draw_graph_borders = true,			-- Show graph borders;						options: {true, false}
-- draw_outline = false,				-- Show outline;							options: {true, false}
-- draw_shades = false,					-- Show shades;								options: {true, false}
-- extra_newline = false,				-- Show an extra newline per line;			options: {true, false}
-- font = '<font>:size=<size_number>,	-- Change the font;							options: '<font_name>:size=<font_number>'
-- own_window_transparent = false, 		-- To enable real transparency; 			options: {true, false}
-- own_window_argb_visual = true,		-- For actual RGB values;					options: {true, false}


conky.config = {
	alignment = 'middle_middle',
    background = true,
    border_width = 5,
    cpu_avg_samples = 2,
    default_color = 'white',
    default_outline_color = 'darkgreen',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = true,
    draw_graph_borders = true,
    draw_outline = true,
    draw_shades = true,
    extra_newline = false,
    font = 'JetBrains Mono:size=7',
    gap_x = 0,
    gap_y = 60,
    minimum_height = 5,
    minimum_width = 5,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
	own_window_transparent = false,
	own_window_argb_visual = true,
	own_window_argb_value = 60,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
}

conky.text = [[
${color grey} Notes:
 1. node = Window
${color yellow}Keybindings:
${hr}
=============    Independent    =============
super + Return                              | Open Terminal Emulator [${exec echo $TERMINAL}]
super + Space                               | Open Program Launcher
super + Escape                              | Reload sxhkd configuration file
${hr}
=============   BSPWM Hotkeys   =============
super + alt + {q,r}                         | Quit / Restart BSPWM
super + shift + w                           | Close & Kill Window
super + m                                   | alternate tiled <--> monocle
super + y                                   | Send the newest marked node (window) to the newest preselected node
super + g                                   | Swap current window <--> biggest window
${hr}
=============    State / Flags  =============
super + {t,shift + t,s,f}                   | Set window state (t)iled,p(s)eudo_tiled,(f)loating,fullscreen}
super + ctrl + {m,x,y,z}                    | Set the node (window) flags {m:marked,x:locked,y:sticky,z:private}
${hr}
=============    Focus / Swap   =============
super + {h,j,k,l}                           | Focus node in the given direction { h:west, j:south, k:north, l:east }
super + {_,shift + }{h,j,k,l}               | Swap node in the given direction { h:west, j:south, k:north, l:east }
super + {p,b,comma,period}                  | Focus node for the given path jump  { p:parent, b:brother, comma:first, period:second }
super + {_,shift + }c                       | Focus { shift + c : Previous, c : Next } window in the current desktop
super + bracket{left,right}                 | Focus { bracket{left}: Previous, bracket{right}: Next } window in the current monitor
super + {grave,Tab}                         | Focus last { grave: node, Tab: desktop }
super + {o,i}                               | Focus { o: Older, n: Newer } node (window) in the focus history
super + {_,shift +}{1-9,0}                  | Focus / send to the given desktops ( 0 - 9 )
${hr}
=============      Preselect    =============
super + ctrl + {h,j,k,l}                    | Preselect the directions { h:west, j:south, k:north, l:east }
super + ctrl + {1-9}                        | Preselect the ratio 0.1 --> 0.9 (min 0.1, max 0.9)
super + ctrl + space                        | Cancel the Preselection for the focused node; aka Cancel Preselection on Window
super + ctrl + shift + space                | Cancel the Preselection for the focused desktop
${hr}
=============    Move / Resize  =============
super + alt + {h,j,k,l}                     | Expand a window by moving one of its side outwords  
super + alt + shift + {h,j,k,l}             | Contract a window by moving one of its side inwards 
super + alt + {Left,Down,Up,Right}          | Move a floating window (using Arrow Directional Keys)
${hr}
=============     Personal      =============
super + ctrl + alt + {s,u}                  | Open Multiple Terminal Emulators {s:st, u:urxvt}
super + ctrl + b                            | Open Browser [dmenu_Browsers.sh]
super + alt + p                             | Open File Manager : pcmanfm --profile=asura
alt + Tab                                   | Switch Tab/Programs - Open Task Switcher; Open Rofi
super + v                                   | Open Vim
super + ctrl + alt + l                      | Screenlocker
F12                                         | Screenshot
super + ctrl + d                            | Discord
super + shift + {Left,Down,Up,Right}        | Move Window around like i3(-gaps); using bspwm_smart_move
super + {Left,Down,Up,Right}                | Select & Focus node using Directional Keys
super + alt + {Left,Down,Up,Right}          | Expand a window using Directional Keys
super + alt + shift + {Right,Top,Down,Left} | Contract a window using Directional Keys
]]
