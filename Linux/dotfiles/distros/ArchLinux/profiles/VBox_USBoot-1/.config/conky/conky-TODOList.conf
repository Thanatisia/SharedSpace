-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
--   print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html


-- default config parameters: 
-- alignment = 'top_left', 				-- Alignment;								options: {top_left, top_right, middle_left, middle_right, bottom_left, bottom_right}
-- background = false, 					-- Run in background; 						options: {true, false}
-- border_width = 1,					-- The width of the border;					options: {numbers; default = 1}
-- default_color = 'white',				-- Default color of the border;				options: {'<color> / <hex>'; default = 'white'}
-- default_outline_color = 'white',		-- Default color of the outline;			options: {'<color> / <hex>'; default = 'white'}
-- default_shade_color = 'white',		-- Default color of the shade;				options: {'<color> / <hex>'; default = 'white'}
-- draw_borders = false,				-- Show borders around the system monitor;	options: {true, false}
-- draw_graph_borders = true,			-- Show graph borders;						options: {true, false}
-- draw_outline = false,				-- Show outline;							options: {true, false}
-- draw_shades = false,					-- Show shades;								options: {true, false}
-- extra_newline = false,				-- Show an extra newline per line;			options: {true, false}
-- font = '<font>:size=<size_number>,	-- Change the font;							options: '<font_name>:size=<font_number>'
-- own_window_transparent = false, 		-- To enable real transparency; 			options: {true, false}
-- own_window_argb_visual = true,		-- For actual RGB values;					options: {true, false}


conky.config = {
	alignment = 'bottom_left',
    background = true,
    border_width = 5,
    cpu_avg_samples = 2,
    default_color = 'white',
    default_outline_color = 'darkgreen',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = true,
    draw_graph_borders = true,
    draw_outline = true,
    draw_shades = true,
    extra_newline = false,
    -- font = 'JetBrains Mono:size=12',
    font = 'Hack:size=12',
	gap_x = 60,
    gap_y = 60,
    minimum_height = 5,
    minimum_width = 5,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
	own_window_transparent = false,
	own_window_argb_visual = true,
	own_window_argb_value = 60,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
}

conky.text = [[
${color grey}Info:$color ${scroll 32 Conky $conky_version - $sysname $nodename $kernel $machine}
$hr
${color grey} Hello World!
${color grey} Date: ${color white}${time %d/%m/%y}
${color grey} Time: ${color white}${time %H:%M:%S}
$hr
${color grey} [Updates]
${color grey} Packages: ${color white} ${exec pacman -Qu}
$hr
${color grey} [TODO List]
${color grey} --- General
${color grey} --- Purchases
${color white} 1. Buy a new 256.0GB MicroSD Card for installing a new ArchLinux build 
	> solely focus on ricing and testing Window Managers
${color grey} --- Rice
${color white} 1. Install a new ArchLinux build on the new MicroSD Card 
	- solely focusing on ricing and testing Window Managers
 2. Download & Install ArtixLinux (OpenRC | s6 | runit)
${color grey} --- Build
${color white} 1. Install Steam
 2. Install Lutris
 3. Enable Steam Beta
 4. Setup Steam Proton 
 5. Install Wine (Nightly)
 6. Install Android Studio
${color grey} --- Programming
${color white} 1. Install and practice Herbstluftwm (Window Manager)
 2. Install and practice Polybar (Status Bar)
 3. Create a bspwm bspc config
${color grey} --- SAF
${color white} 1. Project WITS
${color yellow}	> Figure out network security diagram for Telegram Bot
	> Learn how to make a Telegram bot
	> Learn how to use Docker
	> Learn how to use Docker in a Telegram Bot
	> Implement security in a Telegram Bot
	> Sanitization of data in Telegram Bot
	> SQLite in Telegram Bot
	> Creating a Database in Telegram Bot
	> Authentication & Autherization of data in Telegram Bot
	> Primary & Public Key Authentication in Telegram Bot
	> Learn how to use Google API
	> Learn how to use Google API in Telegram Bot
$hr
${color grey} [Completed]
${color grey} --- Rice
 1. Edit Grub | Completed : 2021-05-14 2359H
 2. Transfer MicroSD Card from SD Card Adapter to USB MicroSD Card reader 
	- to read it on Virtual Machine USB Boot & Boot | Completed : 2021-05-23 2359H
]]
