Cheatsheet : Database Management Systems (DBMS)

## Table of Contents
- Constraints
- Database Schema Design Table
- Data Types
- Normal Forms
- Queries
- Unified Modelling Language (UML):

Data Types:
    BOOL : Binary/Boolean - True|False
    REAL : Floating Point Numbers - x.y
    BLOB : Object Values - Files etc.
    INTEGER : Integers/Real Numbers - 1,2,3,4....
    TEXT : Variable-Length String value
    int  : Modern unsigned Integer values
    varchar
    nvarchar

Constraints
    - Keys
        - Primary Key : The main identifer for an object class to identify the records; Only can have One
        - Foreign Keys : In Relational Model, all 'one-to-many' and 'one-to-one' associations will be implemented using the Referential Constraint (aka Foreign Key)
            - Take the PRIMARY KEY from the '1' side of the association and paste it into the 'Many' side of the association
                - The 'Referenced' PRIMARY KEY from the '1' side of the one-to-Many and one-to-one Association is the FOREIGN KEY
            - Multiple Primary Keys from various Objects to form an Association Class
            - Always copy from the one side to the Many side
        - Composite Key : If a class in the conceptual model have (n)x IDs; 
            - Those n attributes combined together will become a UNIQUE Key called the Composite Key; 
            - Only can have 1 PRIMARY Key and the Composite Key is the table's PRIMARY KEY
            - Wrap it around a bracket
        - Candidate Key : The candidate(s) to be chosen as a primary key in a relational data model; Can have Many
    - NULL : Checks if column can contain NULL value
    - AUTO_INCREMENT : Row valued will increment by 1 everytime a new ROW is inserted. If a Column is PRIMARY KEY and Data Type is INTEGER, column is automatically AUTO_INCREMENT

Queries:
    # C.R.U.D
    # Create
    # Read
    # Update
    # Delete
    CREATE:
        Database : CREATE DATABASE [Database_Name]
        Table : CREATE TABLE {options} [TABLE_NAME] (column_definitions)
    SELECT:
        # Syntax
        SELECT {columns} FROM {table_name} WHERE {filters}
    INSERT:
        INSERT INTO {table_name}

    UPDATE:

    ALTER:
        # Modify

    JOIN:
	- To combine multiple tables together to form 1 table
	# Syntax
	INNER JOIN [main-table] ON [attributes_current=attribute_new]

    DELETE:
        - Drop
	Table: DROP TABLE;

    ORDER: 
	# Syntax
	ORDER BY [columns]

    GROUP:
	# Syntax
	GROUP BY [group-name]

Unified Modelling Language (UML):
    Symbols:
        Triangle â–² : Generalization/Specialization

    Database Design:
        - Terminology:
            Specialization/Generalization
            Link/Association

        - Every class must have 1 UNIQUE Key
            - If system detects no UNIQUE Key, it will combine all columns in the table to form 1 Key to form a Composite/Primary Key



Database Schema Design Table:
    Database Name: 
    Table Name: 
    Table Columns:
    =====================================================
    | ROW_ID, column_name, column_datatype, constraints |
    =====================================================


Normal Forms:
    1NF : IFF All its attributes are Atomic (Single Value Attributes; No Multi-value Attributes)
    2NF : IFF it is already in 1NF and all its Non-Key Attributes are FULLY functionally dependent on their Minimal Super Key
        ```
        Tldr;
        
        A 2NF table CANNOT contain Partial Functional Dependency
        ```
    3NF : IFF it is already in 2NF and all its Non-Key Attributes are mutually independent.
        ```
        Tldr;

        A 3NF table CANNOT contain Transitive Functional Dependency
        ```
    BCNF : IFF all its determinants are Minimal Super Key (Candidate Keys)..
        ```
        Tldr;

        A BCNF table CANNOT contain Non-Trivial Functional Dependency where 
            - the determinant (Left Hand Side) is NOT a Candidate Key
        
        - Requirements:
            - Identify all Functional Dependency
            - Identify 1NF requirement is met
            - Identify 2NF requirement is met
            - Identify 3NF requirement is met
        ```
    4NF : A relational table is in 4NF IF and only IF the table is already in BCNF, and
        there is NO multiple multi-value Attriutes
        ```
        - Existence (evidence) of Multiple multi-value attributes is an indication of violation of 4NF
        ```

    5NF : A relational table is in 5NF IF and only IF the table is already in 4NF, and
        there is NO losy joint violation.
        In other words, a 5NF must contain only lossless join
        - Lossless Join:
            - 1 table can split it into multiple tables
            - After splitting, you can join the multiple split tables back into 1
            - If after splitting and you cannot join the table back into 1,
                this is a LOSSY join

