#
# Linux Command Documentation: su
#

[Background]
Command Name: su
Abbreviation: Switch User
Command Summary: A command that allows a user to switch to / execute commands as another user
General Syntax: su [OPTIONS] [ USER [ARGUMENTS...] ]
General Parameters: -c, -s

[NOTES]
1. 

[Parameters]
-c : Execute a command as another user / super user
	Syntax:
		su <user_name> -c <command>
	Examples:
		[1] Echo Hello World
			Command:
				su <user_name> -c "echo Hello World, ${whoami}"
			Output:
				Hello World, <user_name>

-s : Run another shell
	Syntax:
		su -s <shell>
	Examples:
		[1] Using zsh
			Command: 
				su -s /usr/bin/zsh
			Output:
				<shell in zsh>

[Examples]

[Issues]
1. sudo su - $username -c "echo $HOME" shows the previous user's home directory instead
	- the variable $HOME gets expanded before the shell executes the command
	i. Use single quotes to prevent variable expansion in the first shell
		sudo su - $username -c '$echo $HOME'
	ii. Escape the '$' to prevent execution
		sudo su - $username -c "echo \$HOME"
		- \$ to tell the shell to ignore the special character '$' in the current shell and 
			pass '$HOME' to the new user's shell
		- "tell the shell that you want to ignore the special meaning of the $ character and send it down to the su command to execute"

[Use-Cases]


[Functions]
get_users_Home()
{
	#
	# Get the home directory of a user
	#
	USER_NAME=$1
	HOME_DIR=""
	if [[ ! "$USER_NAME"  == "" ]]; then
		# Not Empty
		HOME_DIR=$(su - $USER_NAME -c "echo \$HOME")
	fi
	echo "$HOME_DIR"
}

[References]
bash - su and $HOME : https://unix.stackexchange.com/questions/357913/bash-su-and-home
